<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[使用 aspnet_regiis.exe 加解密 web.config 組態設定檔]]></title>
      <url>/2018/02/01/%E4%BD%BF%E7%94%A8%20aspnet_regiis.exe%20%E5%8A%A0%E8%A7%A3%E5%AF%86%20web.config%20%E5%85%A7%E5%AE%B9/</url>
      <content type="html"><![CDATA[<p><code>aspnet_regiis.exe</code> 主要用途是用來註冊 IIS 上的 ASP.NET 應用程式，像是：</p>
<ol>
<li>註冊 <code>-i</code> 移除 <code>-u</code> .NET Framework ASP.NET 安裝</li>
<li>建立 ASP.NET 應用程式集區</li>
<li>列出目前已安裝的 ASP.NET 版本 <code>-lv</code></li>
</ol>
<p>除了這些以外，還能將組態設定檔 web.config 指定區段加解密。<br><a id="more"></a></p>
<hr>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 .NET 開發過程中，像是 Web Site、WebAPI 在建立專案時，即會一併產生 web.config 檔案，而 WinForm、Class Library … 等其他專案也會有 app.config 這種 XML 檔案類型的組態設定檔，提供程式開發人員可進一步設定網站伺服器、應用程式或個別網頁。<br>組態設定檔內容難免也會包含了敏感機密資料，較常被提及的像是與資料庫連線所需要設定的連線字串 <code>&lt;connectionStrings&gt;</code> 即是，由於連線字串包含了伺服器名稱、使用者名稱、密碼等資訊，若不經加密處理而直接以明文方式儲存於組態設定檔，等於將該伺服器的存取權限直接暴露在外，若使用 Fortify SCA 針對程式碼進行弱點掃描偵測，也會被列出 High 高風險項目如下：</p>
<ul>
<li><a href="https://vulncat.fortify.com/zh-tw/detail?id=desc.semantic.java.password_management_hardcoded_password#C%23%2FVB.NET%2FASP.NET" target="_blank" rel="noopener">Password Management: Hardcoded Password</a></li>
<li><a href="https://vulncat.fortify.com/zh-tw/detail?id=desc.config.java.password_management_password_in_configuration_file" target="_blank" rel="noopener">Password Management: Password in Configuration File</a></li>
<li><a href="https://vulncat.fortify.com/zh-tw/detail?id=desc.semantic.dotnet.insecure_transport_database" target="_blank" rel="noopener">Insecure Transport: Database</a></li>
</ul>
<pre><code class="xml">&lt;!--以明文方式儲存連線字串--&gt;
&lt;configuration&gt;
  &lt;connectionStrings&gt;
    &lt;add name=&quot;connStr&quot; connectionString=&quot;Data Source=.\SQLEXPRESS;Integrated Security=SSPI;Initial Catalog=Northwind;&quot; /&gt;
   &lt;/connectionStrings&gt;
&lt;/configuration&gt;
</code></pre>
<p>使用 <code>aspnet_regiis.exe</code> 可以針對組態設定選擇使用 <a href="https://zh.wikipedia.org/zh-tw/%E6%95%B0%E6%8D%AE%E4%BF%9D%E6%8A%A4API" target="_blank" rel="noopener">DPAPI (Windows Data Protection API)</a> 或 <a href="https://zh.wikipedia.org/zh-tw/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">RSA</a> 進行加密，在 System.Configuration 裡也有提供相對的類別讓我們實作：</p>
<ul>
<li>DPAPI：<a href="https://msdn.microsoft.com/zh-tw/library/system.configuration.dpapiprotectedconfigurationprovider.aspx" target="_blank" rel="noopener">DpapiProtectedConfigurationProvider</a></li>
<li>RSA：<a href="https://msdn.microsoft.com/zh-tw/library/system.configuration.rsaprotectedconfigurationprovider.aspx" target="_blank" rel="noopener">RsaProtectedConfigurationProvider</a></li>
</ul>
<pre><code class="xml">&lt;!--以 RSA 加密後的連線字串--&gt;
&lt;connectionStrings configProtectionProvider=&quot;RsaProtectedConfigurationProvider&quot;&gt;
  &lt;EncryptedData Type=&quot;http://www.w3.org/2001/04/xmlenc#Element&quot;
    xmlns=&quot;http://www.w3.org/2001/04/xmlenc#&quot;&gt;
    &lt;EncryptionMethod Algorithm=&quot;http://www.w3.org/2001/04/xmlenc#tripledes-cbc&quot; /&gt;
    &lt;KeyInfo xmlns=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;
      &lt;EncryptedKey xmlns=&quot;http://www.w3.org/2001/04/xmlenc#&quot;&gt;
        &lt;EncryptionMethod Algorithm=&quot;http://www.w3.org/2001/04/xmlenc#rsa-1_5&quot; /&gt;
        &lt;KeyInfo xmlns=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;
          &lt;KeyName&gt;Rsa Key&lt;/KeyName&gt;
        &lt;/KeyInfo&gt;
        &lt;CipherData&gt;
          &lt;CipherValue&gt;Z8g+qVoFeQ2k6np0w0xuyPXgJ3MKYXgnP1ehkIwE8qCXv/5vkynw8WncDSfJFG8tQFWTDv5jUGK6zmjgQssrXI9vFrzlikqn2qZtML6DCkIkOrAFpmrn+eMHsow8tKhT6MugxD8CDQCjRKmNItvEOs+aE52Iy8xpke44D7r2vfVu5utGNuaJz9N5Qhwvj1qdhGxbH4yv8Y+oS3seRydUVu7UxTg8MmauQvJkfeUjEvAUKLhuqs69g03axt7wluglie2E3jEISBKaP1xsldD5etWVleOSgGMGFwSy6GNvAIDbiowO37Nj1x88B2YL/Vg69sRgrqvCw3GauXcQawPHVA==&lt;/CipherValue&gt;
        &lt;/CipherData&gt;
      &lt;/EncryptedKey&gt;
    &lt;/KeyInfo&gt;
    &lt;CipherData&gt;
      &lt;CipherValue&gt;QQJja/4XQZ9STW6EdH3YYbUyZoZMq2Y7Wtvm9obju/Hw1vSOf+k2/f+TvebZQxgRid2/95MTMY4ED/s7DzDjNDLvWV7TdtI298Yg6vxiFs1yx+Ln4O71vCfJA0I1wxHVP55d+3EHjWKfclrfCwR1+MLigvv2N5hdaAFMQabmrJKYW1zA+WtXJGmb6uaO4l0w5haDka0FH75b7oY4JOs1E+8tV9rvaOJPBuS4WyPizhKkCuT4cm6M7ywrzDL3sVwebFo68sxtUzmQdjfREQIIrL+IGG58eG6S5aJv5dlYJpahHdLFA8OA80U/mXi5P7TZ6ZBDZ4C4tseGOw6h3MBblKZ7PfvW7OnFvWYleMWIK2CqHwK7lHHhnS+A2TCPdsiKBt0Ad0qR0lIaHGKFC/+xeRaSAWCSekEPstg4ouhImKERbUWAHeCiaIp9kejJ/Zq9zW800lCIXoTiraU9PTpA7KmEvowEYNICRTXwJ43a6GajcGjNZwgfjyCByeJGba2SS+4oawaZ6wgSPL1+21gtYP4nlfuxej4Y2K3BnsOhvs+psk9NgUGNGMcrBOj8LoTq20ar8dRjWh9qQPvdl6fmQFUmQRswpzHQ&lt;/CipherValue&gt;
    &lt;/CipherData&gt;
  &lt;/EncryptedData&gt;
&lt;/connectionStrings&gt;
</code></pre>
<h3 id="環境說明"><a href="#環境說明" class="headerlink" title="環境說明"></a>環境說明</h3><h4 id="程式路徑"><a href="#程式路徑" class="headerlink" title="程式路徑"></a>程式路徑</h4><p><code>aspnet_regiis.exe</code> 位於 .NET Framework 安裝目錄中，預設路徑是：</p>
<ul>
<li>32位元：%windir%\Microsoft.NET\Framework</li>
<li>64位元：%windir%\Microsoft.NET\Framework64</li>
</ul>
<p>若覺得每次開啟 <code>cmd.exe</code> 再切換到上述目錄而感到不便，也可以直接使用 Visual Studio 的 Developer Command Prompt，開啟後即會將 .NET Framework 所在目錄加到 <code>path</code> 裡；若要以電腦層級 (Machine-level) 加密，也請記得使用 <code>系統管理員</code> 身份執行，以免無法順利成功加密 web.config 組態設定檔，此部份會在後述說明。</p>
<h4 id="使用限制"><a href="#使用限制" class="headerlink" title="使用限制"></a>使用限制</h4><p>一般來說，我們在 web.config 組態設定裡比較常使用到的區段像是：</p>
<ul>
<li><code>&lt;appSettings&gt;</code> 自訂參數的 key/value</li>
<li><code>&lt;connectionStrings&gt;</code> 連線字串</li>
<li><code>&lt;identity&gt;</code> 模擬 IIS 提供 Windows 驗證</li>
<li><code>&lt;sessionState&gt;</code> Session 儲存機制設定</li>
</ul>
<p>上述區段都可以透過 <code>aspnet_regiis.exe</code> 將內容加密，而下列則是無法進行加密的區段：</p>
<ul>
<li><code>&lt;processModel&gt;</code></li>
<li><code>&lt;runtime&gt;</code></li>
<li><code>&lt;mscorlib&gt;</code></li>
<li><code>&lt;startup&gt;</code></li>
<li><code>&lt;system.runtime.remoting&gt;</code></li>
<li><code>&lt;configProtectedData&gt;</code></li>
<li><code>&lt;satelliteassemblies&gt;</code></li>
<li><code>&lt;cryptographySettings&gt;</code></li>
<li><code>&lt;cryptoNameMapping&gt;</code></li>
<li><code>&lt;cryptoClasses&gt;</code></li>
</ul>
<p>可以簡單理解為：程式執行階段相關必要設定與加密過後的區段無法再進行加密；此外，使用 <code>aspnet_regiis.exe</code> 進行加密時，可以指定組態設定檔所在目錄或是 ASP.NET 應用程式集區名稱，<strong>但只會固定針對 web.config 這個檔案名稱做處理</strong>，<strong>且不會遞迴往下找尋所有子目錄</strong>，若發現 web.config 不存在，則會自動建立一個如下所示的檔案。</p>
<pre><code class="xml">&lt;!--以加密 connectionStrings 為例，當 web.config 檔案不存在，則會自動建立--&gt;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;configuration&gt;
    &lt;connectionStrings /&gt;
&lt;/configuration&gt;
</code></pre>
<p><code>aspnet_regiis.exe</code> 提供了 RSA 與 DPAPI (Windows Data Protection API) 兩種加密方式，若執行時沒有特別指定加密提供者 (ProtectedConfigurationProvider)，預設則會使用 <span class="label warning">RSA-1024</span> 來做加密；<strong>且僅有 RSA 加密方式才能匯出加密金鑰</strong>，若想在多台伺服器使用同一組加密金鑰，也僅能選擇此方式，接下來的說明也將以 RSA 加密為例。</p>
<h4 id="加密層級"><a href="#加密層級" class="headerlink" title="加密層級"></a>加密層級</h4><p>RSAProtectedConfigurationProvider 提供了兩種金鑰容器 (Key Container)，我們可視實務上應用程式架構與資料敏感程度 (例：不同應用程式之間是否可共用同一組金鑰) 來決定採用何者：</p>
<h5 id="電腦層級-Machine-level"><a href="#電腦層級-Machine-level" class="headerlink" title="電腦層級 (Machine-level)"></a>電腦層級 (Machine-level)</h5><p>預設所有可登入電腦的使用者都可以存取電腦層級的 RSA 金鑰容器，但我們也可透過選項 <code>-pa</code> 來指定  NTFS 存取控制清單 (ACL)，若希望在同一台伺服器上的所有應用程式集區都共用同一組加密金鑰，則適合選擇此方式，而所有電腦層級的 RSA 金鑰都會儲存在：</p>
<pre><code class="bash">\Documents and Settings\All Users\Application Data\Microsoft\Crypto\RSA\MachineKeys
</code></pre>
<h5 id="使用者層級-User-level"><a href="#使用者層級-User-level" class="headerlink" title="使用者層級 (User-level)"></a>使用者層級 (User-level)</h5><p>使用者層級的 RSA 金鑰容器和使用者設定檔 (User Profile) 是一起儲存的，若僅想在特定的使用者帳戶下執行加密與解密，則適合選擇此方式，而當使用者設定檔被刪除時，RSA 金鑰也會一併被移除，因為金鑰的存放路徑位於使用者帳戶之下：</p>
<pre><code class="bash">\Documents and Settings\{使用者名稱}\Application Data\Microsoft\Crypto\RSA
</code></pre>
<h3 id="實作說明"><a href="#實作說明" class="headerlink" title="實作說明"></a>實作說明</h3><h4 id="指定組態設定檔目錄"><a href="#指定組態設定檔目錄" class="headerlink" title="指定組態設定檔目錄"></a>指定組態設定檔目錄</h4><p>指定 web.config 組態設定檔所在目錄，採用 RSA 電腦層級加密其指定區段內容，可以透過選項 <code>-pef</code> 加密 <code>-pdf</code> 解密：</p>
<pre><code class="bash">#對象：D:\MyWeb\api\web.config 裡的 &lt;connectionStrings&gt; 區段
#加密
aspnet_regiis -pef &quot;connectionStrings&quot; &quot;D:\MyWeb\api&quot;
#解密
aspnet_regiis -pdf &quot;connectionStrings&quot; &quot;D:\MyWeb\api&quot;
</code></pre>
<p>若欲加密的區段屬於巢狀區段 (例：下列的 <code>&lt;globalization&gt;</code> )，區段名稱則需要以 <code>/</code> 串接表示如： <code>system.web/globalization</code>。</p>
<pre><code class="xml">&lt;configuration&gt;
  &lt;connectionStrings&gt;
    &lt;add name=&quot;connStr&quot; connectionString=&quot;Data Source=.\SQLEXPRESS;Integrated Security=SSPI;Initial Catalog=Northwind;&quot;/&gt;
  &lt;/connectionStrings&gt;
  &lt;system.web&gt;
    &lt;compilation debug=&quot;true&quot; targetFramework=&quot;4.6.2&quot; /&gt;
    &lt;httpRuntime targetFramework=&quot;4.6.2&quot; /&gt;
    &lt;customErrors mode=&quot;Off&quot; /&gt;
    &lt;globalization requestEncoding=&quot;UTF-8&quot; responseEncoding=&quot;UTF-8&quot; fileEncoding=&quot;BIG5&quot; culture=&quot;zh-TW&quot; uiCulture=&quot;zh-TW&quot; /&gt;
  &lt;/system.web&gt;
&lt;/configuration&gt;
</code></pre>
<h4 id="指定應用程式集區"><a href="#指定應用程式集區" class="headerlink" title="指定應用程式集區"></a>指定應用程式集區</h4><p>除了直接指定 web.config 組態設定檔所在目錄來加密，我們也可以使用 <code>-pe</code> 加密 <code>-pd</code> 解密，並以 <code>-app</code> 指定 IIS 中的應用程式虛擬路徑，或視需求加上 <code>-site</code> 指定站台名稱 (Name) 或編號 (ID)。<br>以下圖而言， MyWeb 和 MyWeb2 裡都有 api 應用程式，不使用 <code>-site</code> 的情況下，則會對預設站台 (ID=1) 執行動作，例：建立了 MyWeb、MyWeb2 兩個站台，其中有各有 api 應用程式設定如下：<br><img src="MyWeb.png" alt="MyWeb"></p>
<pre><code class="bash">#對象：D:\MyWeb\api\web.config 裡的 &lt;connectionStrings&gt; 區段
#加密
aspnet_regiis -pe &quot;connectionStrings&quot; -app &quot;/api&quot;
#解密
aspnet_regiis -pd &quot;connectionStrings&quot; -app &quot;/api&quot;
</code></pre>
<pre><code class="bash">#對象：D:\MyWeb2\api\web.config 裡的 &lt;connectionStrings&gt; 區段
#加密
aspnet_regiis -pe &quot;connectionStrings&quot; -app &quot;/api&quot; -site &quot;MyWeb2&quot;    #名稱
aspnet_regiis -pe &quot;connectionStrings&quot; -app &quot;/api&quot; -site &quot;2&quot;         #編號
#解密
aspnet_regiis -pd &quot;connectionStrings&quot; -app &quot;/api&quot; -site &quot;MyWeb2&quot;    #名稱
aspnet_regiis -pd &quot;connectionStrings&quot; -app &quot;/api&quot; -site &quot;2&quot;         #編號
</code></pre>
<h4 id="指定加密提供者"><a href="#指定加密提供者" class="headerlink" title="指定加密提供者"></a>指定加密提供者</h4><p>使用 <code>aspnet_regiis.exe</code> 將組態設定檔進行加密時，預設是採用電腦層級的 RSAProtectedConfigurationProvider，若欲指定加密提供者，則需將下列 <code>&lt;configProtectedData&gt;</code> 區段加入 web.config ，設定說明如下：</p>
<ul>
<li>name： 加密提供者名稱</li>
<li>keyContainerName： 金鑰容器名稱</li>
<li>useMachineContainer： <code>true</code> 電腦層級(Machine-level) <code>false</code> 使用者層級(User-level)</li>
</ul>
<pre><code class="xml">&lt;configProtectedData&gt;
   &lt;providers&gt;
      &lt;add name=&quot;UserLevelProvider&quot; 
           type=&quot;System.Configuration.RsaProtectedConfigurationProvider, System.Configuration, Version=4.0.0.0,
                 Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,
                 processorArchitecture=MSIL&quot;
           keyContainerName=&quot;MyKey&quot; 
           useMachineContainer=&quot;false&quot; /&gt;
   &lt;/providers&gt;
&lt;/configProtectedData&gt;
</code></pre>
<h4 id="指定使用者層級加密"><a href="#指定使用者層級加密" class="headerlink" title="指定使用者層級加密"></a>指定使用者層級加密</h4><p>如上述說明，若要指定目前使用者身份來做加密，則需設定 <code>useMachineContainer=&quot;false&quot;</code>，並在執行指令時透過 <code>-prov</code> 來指定加密提供者，而解密時則不需要再指定加密提供者。</p>
<pre><code class="bash">#對象：D:\MyWeb\api\web.config 裡的 &lt;connectionStrings&gt; 區段
#加密
aspnet_regiis -pe &quot;connectionStrings&quot; -app &quot;/api&quot; -prov &quot;UserLevelProvider&quot;
#解密
aspnet_regiis -pd &quot;connectionStrings&quot; -app &quot;/api&quot;
</code></pre>
<h4 id="建立-刪除金鑰容器"><a href="#建立-刪除金鑰容器" class="headerlink" title="建立/刪除金鑰容器"></a>建立/刪除金鑰容器</h4><p>假設目前有個正在開發中系統，分別在不同的伺服器上建立了 INT、UAT、PROD 環境，而我們僅想要使用同一組金鑰來做加解密，以便簡化後續維運流程，這時候就得使用 <code>-pc</code> 建立金鑰容器與 <code>-exp</code> 將金鑰標示為可匯出；因為即使在不同電腦上指定了相同的 <code>keyContainerName</code>，加密後的金鑰仍是無法共用的。</p>
<pre><code class="bash">##建立 MyKey 金鑰容器，並標示為可匯出
aspnet_regiis -pc &quot;MyKey&quot; -exp
##刪除 MyKey 金鑰容器 
aspnet_regiis -pz &quot;MyKey&quot;
</code></pre>
<h4 id="匯出-匯入金鑰容器"><a href="#匯出-匯入金鑰容器" class="headerlink" title="匯出/匯入金鑰容器"></a>匯出/匯入金鑰容器</h4><p>使用 <code>-px</code> 可將指定的金鑰容器匯出，通常我們會再加上 <code>-pri</code> 表示匯出時要包含私有金鑰，以便能夠進行加密與解密，若缺少了私有金鑰，僅能將資料加密無法解密，而匯出金鑰容器則是使用 <code>-pi</code> 選項。</p>
<pre><code class="bash">#匯出 MyKey 金鑰容器
aspnet_regiis -px &quot;MyKey&quot; &quot;C:\MyKey.xml&quot; -pri
#匯入 MyKey 金鑰容器
aspnet_regiis -pi &quot;MyKey&quot; &quot;C:\MyKey.xml&quot;
</code></pre>
<h4 id="新增-刪除存取權限"><a href="#新增-刪除存取權限" class="headerlink" title="新增/刪除存取權限"></a>新增/刪除存取權限</h4><p>在實作過程中，若遇到無法讀取 RSA 金鑰容器之類的錯誤訊息時，通常是目前帳戶對於此金鑰容器沒有讀取權限，此時可以透過 <code>-pa</code> 來授予讀取權限給指定使用者帳戶或群組 (預設是授予讀取權限，需要再加上 <code>-full</code> 才會是所有權限)，或是使用 <code>-pr</code> 來移除已授權存取的使用者帳戶或群組。<br>在這邊需要特別提醒的是：除了實際的使用者帳戶或群組之外，還有 IIS 上的虛擬帳戶，例如文中提過的 MyWeb 應用程式集區，它所對應的虛擬帳戶則是 <code>IIS AppPool\MyWeb</code>。</p>
<pre><code class="bash">#新增讀取權限
aspnet_regiis -pa &quot;MyKey&quot; &quot;IIS AppPool\MyWeb&quot;
#刪除讀取權限
aspnet_regiis -pr &quot;MyKey&quot;
</code></pre>
<h3 id="錯誤排除"><a href="#錯誤排除" class="headerlink" title="錯誤排除"></a>錯誤排除</h3><h4 id="無法開啟組態設定檔"><a href="#無法開啟組態設定檔" class="headerlink" title="無法開啟組態設定檔"></a>無法開啟組態設定檔</h4><p>由於系統預設是以 Machine-level 方式加密，我們必須使用 <code>系統管理員</code> 身份執行 <code>cmd.exe</code> 才能正常進行加密與解密動作，否則將會得到類似如下的錯誤訊息：<br><img src="CannotBeOpened.png" alt="Cannot Be Opened"></p>
<h4 id="找不到加密提供者"><a href="#找不到加密提供者" class="headerlink" title="找不到加密提供者"></a>找不到加密提供者</h4><p>若要使用 <code>-prov</code> 指定加密提供者，必需先在 web.config 裡加上它的區段內容 (如 <a href="#指定加密提供者">3.3</a> 所提及)，否則在加密過程中，會發生找不到加密提供者的錯誤：<br><img src="UserLevelProvider.png" alt="UserLevelProvider"></p>
<h4 id="讀取權限不足"><a href="#讀取權限不足" class="headerlink" title="讀取權限不足"></a>讀取權限不足</h4><p>經加密過的組態設定檔，在程式執行階段不需要再自行解密將原始本文取出，系統會自動以目前執行身份進行解密的動作，若無權限讀取當初加密的金鑰容器，則會發生錯誤如下圖：<br><img src="IIS.png" alt="IIS.png"></p>
<p>要新增金鑰容器讀取權限，我們必需知道金鑰容器名稱、程式執行身份，才有辦法正確執行授權指令，加密後的內容都會在區段上註記 <code>configProtectionProvider</code> 屬性，同一份檔案裡通常也都找得到 <code>&lt;configProtectedData&gt;</code> 區段，如下圖：<br><img src="configProtectedData.png" alt="configProtectedData"></p>
<p>在 IIS 裡若沒有特別指定，通常執行應用程式的使用者都是虛擬帳戶： <code>IIS AppPool\應用程式集區名稱</code>，另外也可以打開工作管理員，查看 <code>w3wp.exe</code> 使用者名稱，這些都是可以確認應用程式執行身份的方法，有了這些資訊後，就可以透過 <a href="#新增-刪除存取權限">3.7</a> 的方式來新增金鑰容器的讀取權限。<br><img src="Identity.png" alt="Identity"> </p>
<h3 id="其他技巧"><a href="#其他技巧" class="headerlink" title="其他技巧"></a>其他技巧</h3><h4 id="外部組態檔"><a href="#外部組態檔" class="headerlink" title="外部組態檔"></a>外部組態檔</h4><p>因應專案不同的需求，我們的 web.config 組態設定檔除了原本的必要設定外，還有可能包含了來自第三方元件的各種設定而使內容冗長，這時我們可透過 <code>configSource</code> 來將指定的區域內容存放到其他路徑；即使 <code>aspnet_regiis.exe</code> 只針對檔名 web.config 做動作，我們也可透過此設定方式來變通，進而加密位於不同檔案的區段內容。<br><img src="DataAccess.png" alt="DataAccess"> </p>
<h4 id="匯出執行檔說明"><a href="#匯出執行檔說明" class="headerlink" title="匯出執行檔說明"></a>匯出執行檔說明</h4><p>通常在命令提示列能夠使用的 <code>.exe</code> 都會自帶說明資訊，一般來說通常會使用 <code>/h</code>、<code>/?</code> 或是 <code>-h</code> 之類的引數，也有些是執行時一定要加上引數才能正常運作，所以直接執行 <code>.exe</code> 時就會列出指令說明，像這次使用的 <code>aspnet_regiis.exe</code> 即是如此。<br>而顯示在命令提示內的所有執行過程或內容，都可以匯出至檔案中，我們必需透過 <code>&gt;</code> 來指定儲存路徑，例如：</p>
<pre><code class="bash">#將指令執行結果儲存至指定路徑
aspnet_regiis &gt; C:\aspnet_regiis.txt
</code></pre>
<h4 id="machine-config"><a href="#machine-config" class="headerlink" title="machine.config"></a>machine.config</h4><p>文中我們有提到 <code>aspnet_regiis.exe</code> 沒有指定任何設定時，預設會使用電腦層級的 RSA 加密方式，由於 .NET Framework 組態繼承的關係，這些設定資訊都可從 machine.config 裡找到，路徑位於： </p>
<ul>
<li>32位元：%windir%\Microsoft.NET\Framework\版本\Config\</li>
<li>64位元：%windir%\Microsoft.NET\Framework64\版本\Config\</li>
</ul>
<p>預設的加密提供者、金鑰容器名稱、加密層級都可以在 machine.config 裡找到定義：<br><img src="Machine.png" alt="machine.config"></p>
<p>在此附帶一提，Config 目錄中還有 machine.config.comments，其中記載了大部份的組態設定說明供開發人員參閱，而 machine.config.default 顧名思義是使用預設值的 machine.config 檔案，萬一 machine.config 不慎損毀或其他因素需要重建，則可以複製此檔案來做修改。<br><img src="Config.png" alt="Config.config"></p>
<h3 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h3><p><code>aspnet_regiis.exe</code> 是 .NET Framework 提供開發人員在 IIS 註冊應用程式的指令工具，除了文中所提及的設定選項，也可自行透過 <a href="#匯出執行檔說明">5.1</a> 的方式匯出所有指令說明，或參閱 <a href="https://msdn.microsoft.com/zh-tw/library/k6h9cz8h.aspx" target="_blank" rel="noopener">ASP.NET IIS 註冊工具 (Aspnet_regiis.exe)</a>，但此文中關於 <code>-pc</code> 選項的說明提到：</p>
<blockquote>
<p>-size keySize 指定金鑰的大小。 預設值為 2048 個位元組。</p>
</blockquote>
<p>這邊指的應該是位元 (bit)，而不是位元組(bytes)，而不指定 <code>-size</code> 加密後的 <code>&lt;CipherValue&gt;</code> 內容看起來像是 RSA-1024 的結果，可能找時間再以程式實際撰寫測試看看是否真如 MSDN 所述採用 RSA-2048。</p>
<h3 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h3><ul>
<li><a href="https://msdn.microsoft.com/zh-tw/library/ms178685.aspx" target="_blank" rel="noopener">ASP.NET 組態檔階層架構和繼承</a></li>
<li><a href="https://msdn.microsoft.com/zh-tw/library/k6h9cz8h.aspx" target="_blank" rel="noopener">ASP.NET IIS 註冊工具 (Aspnet_regiis.exe)</a></li>
<li><a href="https://msdn.microsoft.com/zh-tw/library/k8x4ket8.aspx" target="_blank" rel="noopener">HOW TO：建立 Web.config 檔</a></li>
<li><a href="https://msdn.microsoft.com/zh-tw/library/hh8x3tas.aspx" target="_blank" rel="noopener">受保護的組態的概觀</a></li>
<li><a href="https://msdn.microsoft.com/en-us/library/ff650304.aspx" target="_blank" rel="noopener">How To: Encrypt Configuration Sections in ASP.NET 2.0 Using RSA</a></li>
<li><a href="https://msdn.microsoft.com/en-us/library/ff647398.aspx" target="_blank" rel="noopener">How To: Encrypt Configuration Sections in ASP.NET 2.0 Using DPAPI</a></li>
<li><a href="https://blog.miniasp.com/post/2009/09/09/Introduce-IIS-75-Application-Pool-Identity-and-Virtual-Account.aspx" target="_blank" rel="noopener">介紹 IIS 7.5 的應用程式集區與新增的「虛擬帳戶」特性</a></li>
<li><a href="https://case.ntu.edu.tw/blog/?p=29107" target="_blank" rel="noopener">RSA加密法遇上量子電腦</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> .NET </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RSA </tag>
            
            <tag> encrypt </tag>
            
            <tag> decrypt </tag>
            
            <tag> connection string </tag>
            
            <tag> aspnet_regiis </tag>
            
            <tag> 加密 </tag>
            
            <tag> 解密 </tag>
            
            <tag> 連線字串 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
